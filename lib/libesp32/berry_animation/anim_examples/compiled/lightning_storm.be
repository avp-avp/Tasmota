# Generated Berry code from Animation DSL
# Source: lightning_storm.anim
# Generated automatically
# 
# This file was automatically generated by compile_all_dsl_examples.sh
# Do not edit manually - changes will be overwritten

# Original DSL source:
# # Lightning Storm - Random lightning flashes
# # Dark stormy background with bright lightning
# 
# strip length 60
# 
# # Dark stormy background with subtle purple/blue
# palette storm_colors = [
#   (0, 0x000011),    # Very dark blue
#   (128, 0x110022),  # Dark purple
#   (255, 0x220033)   # Slightly lighter purple
# ]
# 
# animation storm_bg = rich_palette_animation(storm_colors, 12s, smooth, 100)
# 
# # Random lightning flashes - full strip
# animation lightning_main = solid(0xFFFFFF)  # Bright white
# lightning_main.opacity = square(0, 255, 80ms, 3)  # Quick bright flashes
# lightning_main.priority = 20
# 
# # Secondary lightning - partial strip
# animation lightning_partial = pulse_position_animation(
#   0xFFFFAA,  # Slightly yellow white
#   30,        # center position
#   20,        # covers part of strip
#   5          # soft edges
# )
# lightning_partial.priority = 15
# lightning_partial.opacity = square(0, 200, 120ms, 4)  # Different timing
# 
# # Add blue afterglow
# animation afterglow = solid(0x4444FF)  # Blue glow
# afterglow.opacity = square(0, 80, 200ms, 8)  # Longer, dimmer glow
# afterglow.priority = 10
# 
# # Distant thunder (dim flashes)
# animation distant_flash = twinkle_animation(
#   0x666699,  # Dim blue-white
#   4,         # density (few flashes)
#   300ms      # twinkle speed (medium duration)
# )
# distant_flash.priority = 5
# 
# # Start all animations
# run storm_bg
# run lightning_main
# run lightning_partial
# run afterglow
# run distant_flash

import animation

# Lightning Storm - Random lightning flashes
# Dark stormy background with bright lightning
var engine = animation.init_strip(60)
# Dark stormy background with subtle purple/blue
var storm_colors_ = bytes("00000011" "80110022" "FF220033")
var storm_bg_ = animation.rich_palette_animation(animation.global('storm_colors_', 'storm_colors'), 12000, animation.global('smooth_', 'smooth'), 100)
# Random lightning flashes - full strip
var lightning_main_ = animation.solid(0xFFFFFFFF)  # Bright white
animation.global('lightning_main_').opacity = animation.square(0, 255, 80, 3)  # Quick bright flashes
animation.global('lightning_main_').priority = 20
# Secondary lightning - partial strip
var lightning_partial_ = animation.pulse_position_animation(0xFFFFFFAA, 30, 20, 5)
animation.global('lightning_partial_').priority = 15
animation.global('lightning_partial_').opacity = animation.square(0, 200, 120, 4)  # Different timing
# Add blue afterglow
var afterglow_ = animation.solid(0xFF4444FF)  # Blue glow
animation.global('afterglow_').opacity = animation.square(0, 80, 200, 8)  # Longer, dimmer glow
animation.global('afterglow_').priority = 10
# Distant thunder (dim flashes)
var distant_flash_ = animation.twinkle_animation(0xFF666699, 4, 300)
animation.global('distant_flash_').priority = 5
# Start all animations
# Start all animations/sequences
if global.contains('sequence_storm_bg')
  var seq_manager = global.sequence_storm_bg()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('storm_bg_'))
end
if global.contains('sequence_lightning_main')
  var seq_manager = global.sequence_lightning_main()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('lightning_main_'))
end
if global.contains('sequence_lightning_partial')
  var seq_manager = global.sequence_lightning_partial()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('lightning_partial_'))
end
if global.contains('sequence_afterglow')
  var seq_manager = global.sequence_afterglow()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('afterglow_'))
end
if global.contains('sequence_distant_flash')
  var seq_manager = global.sequence_distant_flash()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('distant_flash_'))
end
engine.start()
