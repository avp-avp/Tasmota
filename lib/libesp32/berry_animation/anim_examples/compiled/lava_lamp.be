# Generated Berry code from Animation DSL
# Source: lava_lamp.anim
# Generated automatically
# 
# This file was automatically generated by compile_all_dsl_examples.sh
# Do not edit manually - changes will be overwritten

# Original DSL source:
# # Lava Lamp - Slow flowing warm colors
# # Organic movement like a lava lamp
# 
# strip length 60
# 
# # Define lava colors (warm oranges and reds)
# palette lava_colors = [
#   (0, 0x330000),    # Dark red
#   (64, 0x660000),   # Medium red
#   (128, 0xCC3300),  # Bright red
#   (192, 0xFF6600),  # Orange
#   (255, 0xFFAA00)   # Yellow-orange
# ]
# 
# # Base lava animation - very slow color changes
# animation lava_base = rich_palette_animation(lava_colors, 15s, smooth, 180)
# 
# # Add slow-moving lava blobs
# pattern blob1_pattern = rich_palette_color_provider(lava_colors, 12s, smooth, 255)
# animation lava_blob1 = pulse_position_animation(
#   blob1_pattern, # color source
#   9,            # initial position
#   18,           # large blob
#   12            # very soft edges
# )
# lava_blob1.priority = 10
# lava_blob1.pos = smooth(9, 51, 20s)  # Very slow movement
# 
# pattern blob2_pattern = rich_palette_color_provider(lava_colors, 10s, smooth, 220)
# animation lava_blob2 = pulse_position_animation(
#   blob2_pattern, # color source
#   46,           # initial position
#   14,           # medium blob
#   10            # soft edges
# )
# lava_blob2.priority = 8
# lava_blob2.pos = smooth(46, 14, 25s)  # Opposite direction, slower
# 
# pattern blob3_pattern = rich_palette_color_provider(lava_colors, 8s, smooth, 200)
# animation lava_blob3 = pulse_position_animation(
#   blob3_pattern, # color source
#   25,           # initial position
#   10,           # smaller blob
#   8             # soft edges
# )
# lava_blob3.priority = 6
# lava_blob3.pos = smooth(25, 35, 18s)  # Small movement range
# 
# # Add subtle heat shimmer effect
# pattern shimmer_pattern = rich_palette_color_provider(lava_colors, 6s, smooth, 255)
# animation heat_shimmer = twinkle_animation(
#   shimmer_pattern, # color source
#   6,              # density (shimmer points)
#   1.5s            # twinkle speed (slow shimmer)
# )
# heat_shimmer.priority = 15
# 
# # Start all animations
# run lava_base
# run lava_blob1
# run lava_blob2
# run lava_blob3
# run heat_shimmer

import animation

# Lava Lamp - Slow flowing warm colors
# Organic movement like a lava lamp
var engine = animation.init_strip(60)
# Define lava colors (warm oranges and reds)
var lava_colors_ = bytes("00330000" "40660000" "80CC3300" "C0FF6600" "FFFFAA00")
# Base lava animation - very slow color changes
var lava_base_ = animation.rich_palette_animation(animation.global('lava_colors_', 'lava_colors'), 15000, animation.global('smooth_', 'smooth'), 180)
# Add slow-moving lava blobs
var blob1_pattern_ = animation.rich_palette_color_provider(animation.global('lava_colors_', 'lava_colors'), 12000, animation.global('smooth_', 'smooth'), 255)
var lava_blob1_ = animation.pulse_position_animation(animation.global('blob1_pattern_', 'blob1_pattern'), 9, 18, 12)
animation.global('lava_blob1_').priority = 10
animation.global('lava_blob1_').pos = animation.smooth(9, 51, 20000)  # Very slow movement
var blob2_pattern_ = animation.rich_palette_color_provider(animation.global('lava_colors_', 'lava_colors'), 10000, animation.global('smooth_', 'smooth'), 220)
var lava_blob2_ = animation.pulse_position_animation(animation.global('blob2_pattern_', 'blob2_pattern'), 46, 14, 10)
animation.global('lava_blob2_').priority = 8
animation.global('lava_blob2_').pos = animation.smooth(46, 14, 25000)  # Opposite direction, slower
var blob3_pattern_ = animation.rich_palette_color_provider(animation.global('lava_colors_', 'lava_colors'), 8000, animation.global('smooth_', 'smooth'), 200)
var lava_blob3_ = animation.pulse_position_animation(animation.global('blob3_pattern_', 'blob3_pattern'), 25, 10, 8)
animation.global('lava_blob3_').priority = 6
animation.global('lava_blob3_').pos = animation.smooth(25, 35, 18000)  # Small movement range
# Add subtle heat shimmer effect
var shimmer_pattern_ = animation.rich_palette_color_provider(animation.global('lava_colors_', 'lava_colors'), 6000, animation.global('smooth_', 'smooth'), 255)
var heat_shimmer_ = animation.twinkle_animation(animation.global('shimmer_pattern_', 'shimmer_pattern'), 6, 1500)
animation.global('heat_shimmer_').priority = 15
# Start all animations
# Start all animations/sequences
if global.contains('sequence_lava_base')
  var seq_manager = global.sequence_lava_base()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('lava_base_'))
end
if global.contains('sequence_lava_blob1')
  var seq_manager = global.sequence_lava_blob1()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('lava_blob1_'))
end
if global.contains('sequence_lava_blob2')
  var seq_manager = global.sequence_lava_blob2()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('lava_blob2_'))
end
if global.contains('sequence_lava_blob3')
  var seq_manager = global.sequence_lava_blob3()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('lava_blob3_'))
end
if global.contains('sequence_heat_shimmer')
  var seq_manager = global.sequence_heat_shimmer()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('heat_shimmer_'))
end
engine.start()
