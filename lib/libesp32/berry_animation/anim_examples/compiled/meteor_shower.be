# Generated Berry code from Animation DSL
# Source: meteor_shower.anim
# Generated automatically
# 
# This file was automatically generated by compile_all_dsl_examples.sh
# Do not edit manually - changes will be overwritten

# Original DSL source:
# # Meteor Shower - Multiple meteors with trails
# # Fast moving bright objects with fading trails
# 
# strip length 60
# 
# # Dark space background
# color space_bg = 0x000011
# animation background = solid(space_bg)
# 
# # Multiple meteors with different speeds and colors
# animation meteor1 = comet_animation(
#   0xFFFFFF,  # Bright white
#   12,        # long trail
#   1.5s       # fast speed
# )
# meteor1.priority = 15
# 
# animation meteor2 = comet_animation(
#   0xFFAA00,  # Orange
#   10,        # medium trail
#   2s         # medium speed
# )
# meteor2.priority = 12
# 
# animation meteor3 = comet_animation(
#   0xAAAAFF,  # Blue-white
#   8,         # shorter trail
#   1.8s       # fast speed
# )
# meteor3.priority = 10
# 
# animation meteor4 = comet_animation(
#   0xFFAAAA,  # Pink-white
#   14,        # long trail
#   2.5s       # slower speed
# )
# meteor4.priority = 8
# 
# # Add distant stars
# animation stars = twinkle_animation(
#   0xCCCCCC,  # Dim white
#   12,        # density (many stars)
#   2s         # twinkle speed (slow twinkle)
# )
# stars.priority = 5
# 
# # Add occasional bright flash (meteor explosion)
# animation meteor_flash = twinkle_animation(
#   0xFFFFFF,  # Bright white
#   1,         # density (single flash)
#   100ms      # twinkle speed (very quick)
# )
# meteor_flash.priority = 25
# 
# # Start all animations
# run background
# run stars
# run meteor1
# run meteor2
# run meteor3
# run meteor4
# run meteor_flash

import animation

# Meteor Shower - Multiple meteors with trails
# Fast moving bright objects with fading trails
var engine = animation.init_strip(60)
# Dark space background
var space_bg_ = 0xFF000011
var background_ = animation.solid(animation.global('space_bg_', 'space_bg'))
# Multiple meteors with different speeds and colors
var meteor1_ = animation.comet_animation(0xFFFFFFFF, 12, 1500)
animation.global('meteor1_').priority = 15
var meteor2_ = animation.comet_animation(0xFFFFAA00, 10, 2000)
animation.global('meteor2_').priority = 12
var meteor3_ = animation.comet_animation(0xFFAAAAFF, 8, 1800)
animation.global('meteor3_').priority = 10
var meteor4_ = animation.comet_animation(0xFFFFAAAA, 14, 2500)
animation.global('meteor4_').priority = 8
# Add distant stars
var stars_ = animation.twinkle_animation(0xFFCCCCCC, 12, 2000)
animation.global('stars_').priority = 5
# Add occasional bright flash (meteor explosion)
var meteor_flash_ = animation.twinkle_animation(0xFFFFFFFF, 1, 100)
animation.global('meteor_flash_').priority = 25
# Start all animations
# Start all animations/sequences
if global.contains('sequence_background')
  var seq_manager = global.sequence_background()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('background_'))
end
if global.contains('sequence_stars')
  var seq_manager = global.sequence_stars()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('stars_'))
end
if global.contains('sequence_meteor1')
  var seq_manager = global.sequence_meteor1()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('meteor1_'))
end
if global.contains('sequence_meteor2')
  var seq_manager = global.sequence_meteor2()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('meteor2_'))
end
if global.contains('sequence_meteor3')
  var seq_manager = global.sequence_meteor3()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('meteor3_'))
end
if global.contains('sequence_meteor4')
  var seq_manager = global.sequence_meteor4()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('meteor4_'))
end
if global.contains('sequence_meteor_flash')
  var seq_manager = global.sequence_meteor_flash()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('meteor_flash_'))
end
engine.start()
