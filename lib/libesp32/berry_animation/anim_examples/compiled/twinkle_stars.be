# Generated Berry code from Animation DSL
# Source: twinkle_stars.anim
# Generated automatically
# 
# This file was automatically generated by compile_all_dsl_examples.sh
# Do not edit manually - changes will be overwritten

# Original DSL source:
# # Twinkle Stars - Random sparkling white stars
# # White sparkles on dark blue background
# 
# strip length 60
# 
# # Dark blue background
# color night_sky = 0x000033
# animation background = solid(night_sky)
# 
# # White twinkling stars
# animation stars = twinkle_animation(
#   0xFFFFFF,  # White stars
#   8,         # density (number of stars)
#   500ms      # twinkle speed (twinkle duration)
# )
# stars.priority = 10
# 
# # Add occasional bright flash
# animation bright_flash = twinkle_animation(
#   0xFFFFAA,  # Bright yellow-white
#   2,         # density (fewer bright flashes)
#   300ms      # twinkle speed (quick flash)
# )
# bright_flash.priority = 15
# 
# # Start all animations
# run background
# run stars
# run bright_flash

import animation

# Twinkle Stars - Random sparkling white stars
# White sparkles on dark blue background
var engine = animation.init_strip(60)
# Dark blue background
var night_sky_ = 0xFF000033
var background_ = animation.solid(animation.global('night_sky_', 'night_sky'))
# White twinkling stars
var stars_ = animation.twinkle_animation(0xFFFFFFFF, 8, 500)
animation.global('stars_').priority = 10
# Add occasional bright flash
var bright_flash_ = animation.twinkle_animation(0xFFFFFFAA, 2, 300)
animation.global('bright_flash_').priority = 15
# Start all animations
# Start all animations/sequences
if global.contains('sequence_background')
  var seq_manager = global.sequence_background()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('background_'))
end
if global.contains('sequence_stars')
  var seq_manager = global.sequence_stars()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('stars_'))
end
if global.contains('sequence_bright_flash')
  var seq_manager = global.sequence_bright_flash()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('bright_flash_'))
end
engine.start()
