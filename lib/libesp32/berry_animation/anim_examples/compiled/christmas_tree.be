# Generated Berry code from Animation DSL
# Source: christmas_tree.anim
# Generated automatically
# 
# This file was automatically generated by compile_all_dsl_examples.sh
# Do not edit manually - changes will be overwritten

# Original DSL source:
# # Christmas Tree - Festive holiday colors
# # Green base with colorful ornaments and twinkling
# 
# strip length 60
# 
# # Green tree base
# color tree_green = 0x006600
# animation tree_base = solid(tree_green)
# 
# # Define ornament colors
# palette ornament_colors = [
#   (0, 0xFF0000),    # Red
#   (64, 0xFFD700),   # Gold
#   (128, 0x0000FF),  # Blue
#   (192, 0xFFFFFF),  # White
#   (255, 0xFF00FF)   # Magenta
# ]
# 
# # Colorful ornaments as twinkling lights
# pattern ornament_pattern = rich_palette_color_provider(ornament_colors, 3s, linear, 255)
# animation ornaments = twinkle_animation(
#   ornament_pattern, # color source
#   15,              # density (many ornaments)
#   800ms            # twinkle speed (slow twinkle)
# )
# ornaments.priority = 10
# 
# # Star on top (bright yellow pulse)
# animation tree_star = pulse_position_animation(
#   0xFFFF00,  # Bright yellow
#   58,        # position (near the top)
#   3,         # star size
#   1          # sharp edges
# )
# tree_star.priority = 20
# tree_star.opacity = smooth(200, 255, 2s)  # Gentle pulsing
# 
# # Add some white sparkles for snow/magic
# animation snow_sparkles = twinkle_animation(
#   0xFFFFFF,  # White snow
#   8,         # density (sparkle count)
#   400ms      # twinkle speed (quick sparkles)
# )
# snow_sparkles.priority = 15
# 
# # Garland effect - moving colored lights
# pattern garland_pattern = rich_palette_color_provider(ornament_colors, 2s, linear, 200)
# animation garland = comet_animation(
#   garland_pattern, # color source
#   6,              # garland length (tail length)
#   4s              # slow movement (speed)
# )
# garland.priority = 5
# 
# # Start all animations
# run tree_base
# run ornaments
# run tree_star
# run snow_sparkles
# run garland

import animation

# Christmas Tree - Festive holiday colors
# Green base with colorful ornaments and twinkling
var engine = animation.init_strip(60)
# Green tree base
var tree_green_ = 0xFF006600
var tree_base_ = animation.solid(animation.global('tree_green_', 'tree_green'))
# Define ornament colors
var ornament_colors_ = bytes("00FF0000" "40FFD700" "800000FF" "C0FFFFFF" "FFFF00FF")
# Colorful ornaments as twinkling lights
var ornament_pattern_ = animation.rich_palette_color_provider(animation.global('ornament_colors_', 'ornament_colors'), 3000, animation.global('linear_', 'linear'), 255)
var ornaments_ = animation.twinkle_animation(animation.global('ornament_pattern_', 'ornament_pattern'), 15, 800)
animation.global('ornaments_').priority = 10
# Star on top (bright yellow pulse)
var tree_star_ = animation.pulse_position_animation(0xFFFFFF00, 58, 3, 1)
animation.global('tree_star_').priority = 20
animation.global('tree_star_').opacity = animation.smooth(200, 255, 2000)  # Gentle pulsing
# Add some white sparkles for snow/magic
var snow_sparkles_ = animation.twinkle_animation(0xFFFFFFFF, 8, 400)
animation.global('snow_sparkles_').priority = 15
# Garland effect - moving colored lights
var garland_pattern_ = animation.rich_palette_color_provider(animation.global('ornament_colors_', 'ornament_colors'), 2000, animation.global('linear_', 'linear'), 200)
var garland_ = animation.comet_animation(animation.global('garland_pattern_', 'garland_pattern'), 6, 4000)
animation.global('garland_').priority = 5
# Start all animations
# Start all animations/sequences
if global.contains('sequence_tree_base')
  var seq_manager = global.sequence_tree_base()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('tree_base_'))
end
if global.contains('sequence_ornaments')
  var seq_manager = global.sequence_ornaments()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('ornaments_'))
end
if global.contains('sequence_tree_star')
  var seq_manager = global.sequence_tree_star()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('tree_star_'))
end
if global.contains('sequence_snow_sparkles')
  var seq_manager = global.sequence_snow_sparkles()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('snow_sparkles_'))
end
if global.contains('sequence_garland')
  var seq_manager = global.sequence_garland()
  engine.add_sequence_manager(seq_manager)
else
  engine.add_animation(animation.global('garland_'))
end
engine.start()
